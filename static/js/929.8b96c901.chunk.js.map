{"version":3,"file":"static/js/929.8b96c901.chunk.js","mappings":"uSAWA,MAAMA,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAY,MAC1BE,QAAS,WAGLC,GAAaH,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC/BI,OAAQ,OACRC,QAAS,OACTC,SAAU,WACVC,WAAY,0BAGRC,GAAaR,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC/BE,QAAS,OACTO,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,UACjBC,UAAW,kBACX,UAAW,CACTC,SAAU,IACVD,UAAW,IACXE,OAAQ,OACRZ,QAAS,OACTa,aAAc,GACdN,WAAY,UAGd,eAAgB,CACdL,OAAQ,OACRY,SAAU,IACVd,QAAS,OACTG,QAAS,OACTI,WAAY,SACZC,eAAgB,cAKdO,EAAgB,CACpBC,MAAO,wBACPC,SAAU,WACVC,UAAU,GAINC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CJ,SAAUG,EAAAA,KACPE,IAAI,EAAG,uCACPC,SAAS,yBACZP,MAAOI,EAAAA,KAAaJ,MAAM,yBAAyBO,SAAS,wBAG/C,SAASC,IACtB,MAAMC,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAEjC,MAAEC,IAAUC,EAAAA,EAAAA,KAYlB,OACEC,EAAAA,EAAAA,KAAC5B,EAAU,CAAA6B,UACTD,EAAAA,EAAAA,KAACE,EAAAA,EAAI,CAACC,UAAU,OAAMF,UACpBG,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAAAL,SAAA,EACbD,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAGR,UACvBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaF,UAC1BD,EAAAA,EAAAA,KAAA,OAAKU,IAAI,uDAAuDC,MAAM,OAAOC,IAAI,UAIrFZ,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACE,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAGR,UACvBD,EAAAA,EAAAA,KAACjC,EAAU,CAAAkC,UACTD,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLC,SAvBWC,UACvBnB,GAAW,GACX,UACQE,EAAMkB,EAAOlC,MAAOkC,EAAOjC,UACjCU,EAAS,IACX,CAAE,MAAOwB,GACPrB,GAAW,EACb,GAiBYf,cAAeA,EACfI,iBAAkBA,EAAiBgB,SAClCiB,IAAA,IAAC,OAAEF,EAAM,OAAEG,EAAM,QAAEC,EAAO,aAAEC,EAAY,WAAEC,EAAU,aAAEC,GAAcL,EAAA,OACnEd,EAAAA,EAAAA,MAAA,QAAMU,SAAUS,EAAatB,SAAA,EAC3BD,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNC,QAAQ,WACRC,OAAQT,EACRU,MAAOhB,EAAOlC,MACdmD,SAAUZ,EACVa,WAAYd,EAAQtC,OAASqC,EAAOrC,MACpCqD,MAAOC,QAAQjB,EAAOrC,OAASsC,EAAQtC,OACvCuD,GAAI,CAAEC,GAAI,MAGZtC,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CACRC,WAAS,EACTC,KAAK,QACLE,KAAK,WACLD,KAAK,WACLE,MAAM,WACNC,QAAQ,WACRC,OAAQT,EACRU,MAAOhB,EAAOjC,SACdkD,SAAUZ,EACVa,WAAYd,EAAQrC,UAAYoC,EAAOpC,SACvCoD,MAAOC,QAAQjB,EAAOpC,UAAYqC,EAAQrC,UAC1CsD,GAAI,CAAEC,GAAI,QAGZlC,EAAAA,EAAAA,MAACzC,EAAO,CAACW,eAAe,gBAAe2B,SAAA,EACrCG,EAAAA,EAAAA,MAACzC,EAAO,CAAC4E,IAAK,EAAEtC,SAAA,EACdD,EAAAA,EAAAA,KAACwC,EAAAA,EAAQ,CACPd,KAAK,QACLE,KAAK,WACLK,SAAUZ,EACVoB,QAASzB,EAAOhC,SAChBqD,GAAI,CAAEpE,QAAS,MAGjB+B,EAAAA,EAAAA,KAAC0C,EAAAA,GAAS,CAAAzC,SAAC,oBAGbD,EAAAA,EAAAA,KAAC2C,EAAAA,GAAO,CACNC,GAAG,2BACHC,MAAO,CAAEC,MAAOvD,EAAMwD,QAAQC,QAAQC,MAAOhD,SAAC,yBAKlDD,EAAAA,EAAAA,KAACkD,EAAAA,EAAa,CACZvB,KAAK,SACLmB,MAAM,UACNnD,QAASA,EACTmC,QAAQ,YACRO,GAAI,CAAEc,GAAI,GAAIlD,SAAC,WAIjBG,EAAAA,EAAAA,MAACsC,EAAAA,GAAS,CAAAzC,SAAA,CAAC,0BAETD,EAAAA,EAAAA,KAAC2C,EAAAA,GAAO,CACNC,GAAG,kBACHC,MAAO,CAAEC,MAAOvD,EAAMwD,QAAQC,QAAQC,KAAMG,WAAY,GAAInD,SAAC,kBAI5D,cASzB,C","sources":["app/views/sessions/login/JwtLogin.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Card, Checkbox, Grid, TextField, Box, styled, useTheme } from \"@mui/material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport useAuth from \"app/hooks/useAuth\";\r\nimport { Paragraph } from \"app/components/Typography\";\r\n\r\n// STYLED COMPONENTS\r\nconst FlexBox = styled(Box)(() => ({\r\n  display: \"flex\"\r\n}));\r\n\r\nconst ContentBox = styled(\"div\")(() => ({\r\n  height: \"100%\",\r\n  padding: \"32px\",\r\n  position: \"relative\",\r\n  background: \"rgba(0, 0, 0, 0.01)\"\r\n}));\r\n\r\nconst StyledRoot = styled(\"div\")(() => ({\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  backgroundColor: \"#1A2038\",\r\n  minHeight: \"100% !important\",\r\n  \"& .card\": {\r\n    maxWidth: 800,\r\n    minHeight: 400,\r\n    margin: \"1rem\",\r\n    display: \"flex\",\r\n    borderRadius: 12,\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  \".img-wrapper\": {\r\n    height: \"100%\",\r\n    minWidth: 320,\r\n    display: \"flex\",\r\n    padding: \"2rem\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  }\r\n}));\r\n\r\n// initial login credentials\r\nconst initialValues = {\r\n  email: \"superAdmin1@gmail.com\",\r\n  password: \"password\",\r\n  remember: true\r\n};\r\n\r\n// form field validation schema\r\nconst validationSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(6, \"Password must be 6 character length\")\r\n    .required(\"Password is required!\"),\r\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\r\n});\r\n\r\nexport default function JwtLogin() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { login } = useAuth();\r\n\r\n  const handleFormSubmit = async (values) => {\r\n    setLoading(true);\r\n    try {\r\n      await login(values.email, values.password);\r\n      navigate(\"/\");\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledRoot>\r\n      <Card className=\"card\">\r\n        <Grid container>\r\n          <Grid item sm={6} xs={12}>\r\n            <div className=\"img-wrapper\">\r\n              <img src=\"%PUBLIC_URL%/assets/images/illustrations/dreamer.svg\" width=\"100%\" alt=\"\" />\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item sm={6} xs={12}>\r\n            <ContentBox>\r\n              <Formik\r\n                onSubmit={handleFormSubmit}\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}>\r\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      label=\"Email\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.email}\r\n                      onChange={handleChange}\r\n                      helperText={touched.email && errors.email}\r\n                      error={Boolean(errors.email && touched.email)}\r\n                      sx={{ mb: 3 }}\r\n                    />\r\n\r\n                    <TextField\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Password\"\r\n                      variant=\"outlined\"\r\n                      onBlur={handleBlur}\r\n                      value={values.password}\r\n                      onChange={handleChange}\r\n                      helperText={touched.password && errors.password}\r\n                      error={Boolean(errors.password && touched.password)}\r\n                      sx={{ mb: 1.5 }}\r\n                    />\r\n\r\n                    <FlexBox justifyContent=\"space-between\">\r\n                      <FlexBox gap={1}>\r\n                        <Checkbox\r\n                          size=\"small\"\r\n                          name=\"remember\"\r\n                          onChange={handleChange}\r\n                          checked={values.remember}\r\n                          sx={{ padding: 0 }}\r\n                        />\r\n\r\n                        <Paragraph>Remember Me</Paragraph>\r\n                      </FlexBox>\r\n\r\n                      <NavLink\r\n                        to=\"/session/forgot-password\"\r\n                        style={{ color: theme.palette.primary.main }}>\r\n                        Forgot password?\r\n                      </NavLink>\r\n                    </FlexBox>\r\n\r\n                    <LoadingButton\r\n                      type=\"submit\"\r\n                      color=\"primary\"\r\n                      loading={loading}\r\n                      variant=\"contained\"\r\n                      sx={{ my: 2 }}>\r\n                      Login\r\n                    </LoadingButton>\r\n\r\n                    <Paragraph>\r\n                      Don't have an account?\r\n                      <NavLink\r\n                        to=\"/session/signup\"\r\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}>\r\n                        Register\r\n                      </NavLink>\r\n                    </Paragraph>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </ContentBox>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </StyledRoot>\r\n  );\r\n}\r\n"],"names":["FlexBox","styled","Box","display","ContentBox","height","padding","position","background","StyledRoot","alignItems","justifyContent","backgroundColor","minHeight","maxWidth","margin","borderRadius","minWidth","initialValues","email","password","remember","validationSchema","Yup","shape","min","required","JwtLogin","theme","useTheme","navigate","useNavigate","loading","setLoading","useState","login","useAuth","_jsx","children","Card","className","_jsxs","Grid","container","item","sm","xs","src","width","alt","Formik","onSubmit","async","values","e","_ref","errors","touched","handleChange","handleBlur","handleSubmit","TextField","fullWidth","size","type","name","label","variant","onBlur","value","onChange","helperText","error","Boolean","sx","mb","gap","Checkbox","checked","Paragraph","NavLink","to","style","color","palette","primary","main","LoadingButton","my","marginLeft"],"sourceRoot":""}